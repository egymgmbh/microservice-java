buildscript {
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
	}
}

plugins {
    id 'jacoco'
    id 'com.github.kt3k.coveralls' version '2.6.3'
}

repositories {
	mavenCentral()
}

ext.junitPlatformVersion = '1.0.2'
ext.junitJupiterVersion  = '5.0.2'

apply plugin: 'java'
apply plugin: 'org.junit.platform.gradle.plugin'



jacocoTestReport {
    reports {
        xml.enabled = true // coveralls plugin depends on xml format report
        html.enabled = true
    }
}


dependencies {
	compile group: 'org.eclipse.jetty', name: 'jetty-server', version: '9.4.6.v20170531'
	compile group: 'org.eclipse.jetty', name: 'jetty-servlet', version: '9.4.6.v20170531'
	compile group: 'org.eclipse.jetty', name: 'jetty-http', version: '9.4.6.v20170531'

	compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
	compile group: 'com.google.inject.extensions', name: 'guice-servlet', version: '4.1.0'

	// JUnit Jupiter API and TestEngine implementation
	testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
	testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")
}

compileJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}
compileTestJava {
	sourceCompatibility = 1.8
	targetCompatibility = 1.8
}

junitPlatform {
	filters {
		tags {
			include 'fast'
			include 'slow'
		}
		includeClassNamePattern '.*Test'
	}
}

jar {
	from {
		// compile should suffice. However not all runtime dependencies
		// are included in compile, whereas all compile dependencies
		// are included in runtime.
		// If necessary, add runtime in the same manner as below.
		configurations.compile.collect {
			zipTree(it)
		}
	}

	manifest {
		attributes 'Main-Class': 'SampleMain'
	}

	// Files in the META-INF path with endings .RSA, .SF and .DSA must be excluded.
	// Some JARs are signed (these files indicate a signature) and mixing them
	// with unsigned JARs causes the signature to break which in turn throws a SecurityException.
	exclude 'META-INF/*.RSA', 'META-INF/*.SF', 'META-INF/*.DSA'
}

defaultTasks 'clean', 'build', 'test'

task wrapper(type: Wrapper) {
	description = 'Generates gradlew[.bat] scripts'
	gradleVersion = '4.3.1'
}
